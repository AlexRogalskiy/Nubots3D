States:
-2 0 0 e.0
1 0 0 e.1
0 0 0 e.2
0 -1 0 read
-2 -1 0 read
-1 0 0 e.1
1 -1 0 tape.1
-1 -1 0 read
-1 -2 0 read
-2 -2 0 read
1 -2 0 read
-2 -3 0 s
-1 -3 0 s
-1 -2 1 return
-2 -3 1 read1.r
0 -2 0 read
1 -3 0 s
0 -3 0 s
1 -3 1 read1.r
0 -1 1 checkend
Bonds:
1 0 0 0 0 0 rigid
0 0 0 0 -1 0 rigid
-2 -1 0 -2 0 0 rigid
0 0 0 -1 0 0 rigid
-2 0 0 -1 0 0 rigid
1 0 0 1 -1 0 rigid
-1 0 0 -1 -1 0 rigid
-1 -1 0 -1 -2 0 rigid
-2 -2 0 -2 -1 0 rigid
1 -1 0 1 -2 0 rigid
-2 -2 0 -2 -3 0 rigid
-1 -2 0 -1 -3 0 rigid
0 -2 0 0 -1 0 rigid
1 -2 0 1 -3 0 rigid
0 -2 0 0 -3 0 rigid
1 -3 0 1 -3 1 rigid
0 -1 0 0 -1 1 rigid
-2 -3 0 -2 -3 1 rigid
-1 -2 0 -1 -2 1 rigid
Rules:
b.1 empty null E b.2 b.3 rigid E

b.3 0 null SW b.4 0' rigid SW

b.6 0 rigid SE b.7 0 null SE

0.'' b.8 null NE 0 empty null NE

b.2 empty null E empty empty null E

s.1 empty null E 0 0 rigid E

s.2 empty null E 1 0 rigid E

s.3 empty null E 2 0 rigid E

s.4 empty null E 3 0 rigid E

1 empty null NE 1 b.1 rigid NE

1 0' rigid E 0 0' null E

0' b.4 rigid NE 0' b.5 rigid NW

0' empty null W 0 0'' rigid W

0'' b.5 null NE 0'' b.6 rigid NE

0''' b.5 null NE 0''' b.6 rigid NE

0''' b.7 rigid NE 0'' b.8 rigid NW

1'' empty null W 1 0.' rigid W

1 0.' null E 1 0.'' rigid E

1 empty null NE 1 b.1 rigid NE

1 0' rigid E 0 0' null E

0' b.4 rigid NE 0' b.5 rigid NW

0' empty null W 0 0'' rigid W

0'' b.5 null NE 0'' b.6 rigid NE

0''' b.5 null NE 0''' b.6 rigid NE

0''' b.7 rigid NE 0'' b.8 rigid NW

1'' empty null W 1 0.' rigid W

1 0.' null E 1 0.'' rigid E

2 empty null NE 2 b.1 rigid NE

2 0' rigid E 1 1' null E

1' b.4 rigid NE 1' b.5 rigid NW

1' empty null W 0 1'' rigid W

1'' b.5 null NE 1'' b.6 rigid NE

1''' b.5 null NE 1''' b.6 rigid NE

1''' b.7 rigid NE 1'' b.8 rigid NW

2'' empty null W 2 0.' rigid W

2 0.' null E 2 0.'' rigid E

1 empty null NE 1 b.1 rigid NE

1 0' rigid E 0 0' null E

0' b.4 rigid NE 0' b.5 rigid NW

0' empty null W 0 0'' rigid W

0'' b.5 null NE 0'' b.6 rigid NE

0''' b.5 null NE 0''' b.6 rigid NE

0''' b.7 rigid NE 0'' b.8 rigid NW

1'' empty null W 1 0.' rigid W

1 0.' null E 1 0.'' rigid E

2 empty null NE 2 b.1 rigid NE

2 0' rigid E 1 1' null E

1' b.4 rigid NE 1' b.5 rigid NW

1' empty null W 0 1'' rigid W

1'' b.5 null NE 1'' b.6 rigid NE

1''' b.5 null NE 1''' b.6 rigid NE

1''' b.7 rigid NE 1'' b.8 rigid NW

2'' empty null W 2 0.' rigid W

2 0.' null E 2 0.'' rigid E

3 empty null NE 3 b.1 rigid NE

3 0' rigid E 2 2' null E

2' b.4 rigid NE 2' b.5 rigid NW

2' empty null W 0 2'' rigid W

2'' b.5 null NE 2'' b.6 rigid NE

2''' b.5 null NE 2''' b.6 rigid NE

2''' b.7 rigid NE 2'' b.8 rigid NW

3'' empty null W 3 0.' rigid W

3 0.' null E 3 0.'' rigid E

tape.0' tape.0 null NE tape.0 tape.0 rigid NE

tape.0' tape.1 null NE tape.0 tape.1 rigid NE

tape.1' tape.0 rigid W tape.1'' tape.0 null W

tape.0.copying tape.1'' rigid SW tape.0'' tape.1 rigid SW

tape.1.copying tape.1'' rigid SW tape.1'' tape.1 rigid SW

tape.0.copying tape.0'' rigid SW tape.0'' tape.0 rigid SW

tape.1.copying tape.0'' rigid SW tape.1'' tape.0 rigid SW

copier tape.0 null W tape.0.copying tape.0 null W

tape.0.copying empty null SW tape.0.copying copier rigid SW

copier tape.1 null W tape.1.copying tape.1 null W

tape.1.copying empty null SW tape.1.copying copier rigid SW

0'' empty null SW 0'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 0 null NE tape.0 0 rigid NE

0'' tape.1'' rigid SW 0''' tape.1 rigid SW

0'' tape.0'' rigid SW 0''' tape.0 rigid SW

0'' empty null SW 0'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 0 null NE tape.0 0 rigid NE

0'' tape.1'' rigid SW 0''' tape.1 rigid SW

0'' tape.0'' rigid SW 0''' tape.0 rigid SW

1'' empty null SW 1'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 1 null NE tape.0 1 rigid NE

1'' tape.1'' rigid SW 1''' tape.1 rigid SW

1'' tape.0'' rigid SW 1''' tape.0 rigid SW

0'' empty null SW 0'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 0 null NE tape.0 0 rigid NE

0'' tape.1'' rigid SW 0''' tape.1 rigid SW

0'' tape.0'' rigid SW 0''' tape.0 rigid SW

1'' empty null SW 1'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 1 null NE tape.0 1 rigid NE

1'' tape.1'' rigid SW 1''' tape.1 rigid SW

1'' tape.0'' rigid SW 1''' tape.0 rigid SW

2'' empty null SW 2'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 2 null NE tape.0 2 rigid NE

2'' tape.1'' rigid SW 2''' tape.1 rigid SW

2'' tape.0'' rigid SW 2''' tape.0 rigid SW

0'' empty null SW 0'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 0 null NE tape.0 0 rigid NE

0'' tape.1'' rigid SW 0''' tape.1 rigid SW

0'' tape.0'' rigid SW 0''' tape.0 rigid SW

1'' empty null SW 1'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 1 null NE tape.0 1 rigid NE

1'' tape.1'' rigid SW 1''' tape.1 rigid SW

1'' tape.0'' rigid SW 1''' tape.0 rigid SW

2'' empty null SW 2'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 2 null NE tape.0 2 rigid NE

2'' tape.1'' rigid SW 2''' tape.1 rigid SW

2'' tape.0'' rigid SW 2''' tape.0 rigid SW

3'' empty null SW 3'' copier rigid SW

copier empty null W tape.1' tape.0' rigid W

tape.0' 3 null NE tape.0 3 rigid NE

3'' tape.1'' rigid SW 3''' tape.1 rigid SW

3'' tape.0'' rigid SW 3''' tape.0 rigid SW

0'' empty null W 0.maketuringhead 0.' rigid W

0.maketuringhead empty null SE 0 T.unbound rigid SE

0 0.' null E 0 0.maketuringhead' rigid E

0.maketuringhead' empty null SW 0.'' T.unbound rigid SW

T.unbound tape.0 null W T.bound tape.0 rigid W

T.unbound tape.1 null W T.bound tape.1 rigid W

0 T.bound rigid SW 0 copier2' null SW

0 T.bound rigid SE 0 copier2' null SE

0 copier2' null SW e.0' copier2' rigid SW

0 e.0' rigid E e.0 e.0 rigid E

e.0 copier2' rigid SW e.0 copier2'' rigid SW

tape.0 copier2'' rigid E tape.0 copier2 null E

tape.1 copier2'' rigid E tape.1 copier2 null E

tape.0 copier2 null E tape.0 tape.0.copied rigid E

tape.1 copier2 null E tape.1 tape.1.copied rigid E

tape.0.copied empty null SW tape.0.copied' copier2 rigid SW

tape.1.copied empty null SW tape.1.copied' copier2 rigid SW

tape.0 tape.0.copied' rigid E tape.0 tape.0 null E

tape.1 tape.1.copied' rigid E tape.1 tape.1 null E

copier2 empty null W tape.1.s'' tape.0.s' rigid W

tape.0.s' tape.0 null NE tape.0.s'' tape.0 rigid NE

tape.0.s' tape.1 null NE tape.0.s'' tape.1 rigid NE

tape.1.s'' tape.0.s'' rigid W tape.1.s tape.0.s null W

tape.1.s empty null SW tape.1 s.start rigid SW

tape.0.s empty null SW tape.0 s.start rigid SW

s.start empty null (0,0,1) s return rigid (0,0,1)

[turing]

s return rigid +b s read1.r rigid +b [Change state {return,s}->{read1,s,+1}]

read checkend rigid +b read ended.r rigid +b [Change state {checkend,read}->{ended,read,+1}]

s checkend rigid +b s ended.r rigid +b [Change state {checkend,s}->{ended,s,+1}]

tape.0 checkend rigid +b tape.0 return.l rigid +b [Change state {checkend,tape.0}->{return,tape.0,-1}]

tape.1 checkend rigid +b tape.1 return.l rigid +b [Change state {checkend,tape.1}->{return,tape.1,-1}]

tape.0 return rigid +b tape.0 return.l rigid +b [Change state {return,tape.0}->{return,tape.0,-1}]

1 return rigid +b 1 return.l rigid +b [Change state {return,1}->{return,1,-1}]

read return rigid +b read return.l rigid +b [Change state {return,read}->{return,read,-1}]

read read1 rigid +b read read2.r rigid +b [Change state {read1,read}->{read2,read,+1}]

read read2 rigid +b read ended.r rigid +b [Change state {read2,read}->{ended,read,+1}]

tape.0 read1 rigid +b read return.l rigid +b [Change state {read1,tape.0}->{return,read,-1}]

tape.0 read2 rigid +b read return.l rigid +b [Change state {read2,tape.0}->{return,read,-1}]

tape.0 read1 rigid +b read return.l rigid +b [Change state {read1,tape.0}->{return,read,-1}]

tape.0 read2 rigid +b read return.l rigid +b [Change state {read2,tape.0}->{return,read,-1}]

tape.1 read1 rigid +b read shuttle1.r rigid +b [Change state {read1,tape.1}->{shuttle1,read,+1}]

tape.1 read2 rigid +b read shuttle2.r rigid +b [Change state {read2,tape.1}->{shuttle2,read,+1}]

tape.0 shuttle1 rigid +b tape.0 shuttle1.r rigid +b [Change state {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

tape.1 shuttle1 rigid +b tape.1 shuttle1.r rigid +b [Change state {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.0 shuttle1 rigid +b e.1 checkend.l rigid +b [Change state {shuttle1,e.0}->{checkend,e.1,-1}]

e.0 shuttle2 rigid +b e.2 checkend.l rigid +b [Change state {shuttle2,e.0}->{checkend,e.2,-1}]

e.1 shuttle2 rigid +b e.3 checkend.l rigid +b [Change state {shuttle2,e.1}->{checkend,e.3,-1}]

e.0 ended rigid +b red converted.r rigid +b [Change state {ended,e.0}->{converted,red,+1}]

e.1 ended rigid +b orange converted.r rigid +b [Change state {ended,e.1}->{converted,orange,+1}]

e.2 ended rigid +b yellow converted.r rigid +b [Change state {ended,e.2}->{converted,yellow,+1}]

e.3 ended rigid +b green converted.r rigid +b [Change state {ended,e.3}->{converted,green,+1}]

1 read1.r null -a+b 1 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

e.0 read1.r null -a+b e.0 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

e.1 read1.r null -a+b e.1 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

e.2 read1.r null -a+b e.2 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

e.3 read1.r null -a+b e.3 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

read read1.r null -a+b read read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

s read1.r null -a+b s read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

tape.0 read1.r null -a+b tape.0 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

tape.1 read1.r null -a+b tape.1 read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

green read1.r null -a+b green read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

orange read1.r null -a+b orange read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

red read1.r null -a+b red read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

yellow read1.r null -a+b yellow read1.r' rigid -a+b[Bond right {return,s}->{read1,s,+1}]

1 ended.r null -a+b 1 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

e.0 ended.r null -a+b e.0 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

e.1 ended.r null -a+b e.1 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

e.2 ended.r null -a+b e.2 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

e.3 ended.r null -a+b e.3 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

read ended.r null -a+b read ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

s ended.r null -a+b s ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

tape.0 ended.r null -a+b tape.0 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

tape.1 ended.r null -a+b tape.1 ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

green ended.r null -a+b green ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

orange ended.r null -a+b orange ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

red ended.r null -a+b red ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

yellow ended.r null -a+b yellow ended.r' rigid -a+b[Bond right {checkend,read}->{ended,read,+1}]

1 ended.r null -a+b 1 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

e.0 ended.r null -a+b e.0 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

e.1 ended.r null -a+b e.1 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

e.2 ended.r null -a+b e.2 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

e.3 ended.r null -a+b e.3 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

read ended.r null -a+b read ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

s ended.r null -a+b s ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

tape.0 ended.r null -a+b tape.0 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

tape.1 ended.r null -a+b tape.1 ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

green ended.r null -a+b green ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

orange ended.r null -a+b orange ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

red ended.r null -a+b red ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

yellow ended.r null -a+b yellow ended.r' rigid -a+b[Bond right {checkend,s}->{ended,s,+1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {checkend,tape.0}->{return,tape.0,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {checkend,tape.1}->{return,tape.1,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {return,tape.0}->{return,tape.0,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {return,1}->{return,1,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {return,read}->{return,read,-1}]

1 read2.r null -a+b 1 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

e.0 read2.r null -a+b e.0 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

e.1 read2.r null -a+b e.1 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

e.2 read2.r null -a+b e.2 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

e.3 read2.r null -a+b e.3 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

read read2.r null -a+b read read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

s read2.r null -a+b s read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

tape.0 read2.r null -a+b tape.0 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

tape.1 read2.r null -a+b tape.1 read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

green read2.r null -a+b green read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

orange read2.r null -a+b orange read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

red read2.r null -a+b red read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

yellow read2.r null -a+b yellow read2.r' rigid -a+b[Bond right {read1,read}->{read2,read,+1}]

1 ended.r null -a+b 1 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

e.0 ended.r null -a+b e.0 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

e.1 ended.r null -a+b e.1 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

e.2 ended.r null -a+b e.2 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

e.3 ended.r null -a+b e.3 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

read ended.r null -a+b read ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

s ended.r null -a+b s ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

tape.0 ended.r null -a+b tape.0 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

tape.1 ended.r null -a+b tape.1 ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

green ended.r null -a+b green ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

orange ended.r null -a+b orange ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

red ended.r null -a+b red ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

yellow ended.r null -a+b yellow ended.r' rigid -a+b[Bond right {read2,read}->{ended,read,+1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {read1,tape.0}->{return,read,-1}]

1 return.l null +a+b 1 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.0 return.l null +a+b e.0 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.1 return.l null +a+b e.1 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.2 return.l null +a+b e.2 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

e.3 return.l null +a+b e.3 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

read return.l null +a+b read return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

s return.l null +a+b s return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

tape.0 return.l null +a+b tape.0 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

tape.1 return.l null +a+b tape.1 return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

green return.l null +a+b green return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

orange return.l null +a+b orange return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

red return.l null +a+b red return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

yellow return.l null +a+b yellow return.l' rigid +a+b[Bond left {read2,tape.0}->{return,read,-1}]

1 shuttle1.r null -a+b 1 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

e.0 shuttle1.r null -a+b e.0 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

e.1 shuttle1.r null -a+b e.1 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

e.2 shuttle1.r null -a+b e.2 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

e.3 shuttle1.r null -a+b e.3 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

read shuttle1.r null -a+b read shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

s shuttle1.r null -a+b s shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

tape.0 shuttle1.r null -a+b tape.0 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

tape.1 shuttle1.r null -a+b tape.1 shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

green shuttle1.r null -a+b green shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

orange shuttle1.r null -a+b orange shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

red shuttle1.r null -a+b red shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

yellow shuttle1.r null -a+b yellow shuttle1.r' rigid -a+b[Bond right {read1,tape.1}->{shuttle1,read,+1}]

1 shuttle2.r null -a+b 1 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

e.0 shuttle2.r null -a+b e.0 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

e.1 shuttle2.r null -a+b e.1 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

e.2 shuttle2.r null -a+b e.2 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

e.3 shuttle2.r null -a+b e.3 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

read shuttle2.r null -a+b read shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

s shuttle2.r null -a+b s shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

tape.0 shuttle2.r null -a+b tape.0 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

tape.1 shuttle2.r null -a+b tape.1 shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

green shuttle2.r null -a+b green shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

orange shuttle2.r null -a+b orange shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

red shuttle2.r null -a+b red shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

yellow shuttle2.r null -a+b yellow shuttle2.r' rigid -a+b[Bond right {read2,tape.1}->{shuttle2,read,+1}]

1 shuttle1.r null -a+b 1 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.0 shuttle1.r null -a+b e.0 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.1 shuttle1.r null -a+b e.1 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.2 shuttle1.r null -a+b e.2 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.3 shuttle1.r null -a+b e.3 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

read shuttle1.r null -a+b read shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

s shuttle1.r null -a+b s shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

tape.0 shuttle1.r null -a+b tape.0 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

tape.1 shuttle1.r null -a+b tape.1 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

green shuttle1.r null -a+b green shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

orange shuttle1.r null -a+b orange shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

red shuttle1.r null -a+b red shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

yellow shuttle1.r null -a+b yellow shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

1 shuttle1.r null -a+b 1 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.0 shuttle1.r null -a+b e.0 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.1 shuttle1.r null -a+b e.1 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.2 shuttle1.r null -a+b e.2 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.3 shuttle1.r null -a+b e.3 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

read shuttle1.r null -a+b read shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

s shuttle1.r null -a+b s shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

tape.0 shuttle1.r null -a+b tape.0 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

tape.1 shuttle1.r null -a+b tape.1 shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

green shuttle1.r null -a+b green shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

orange shuttle1.r null -a+b orange shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

red shuttle1.r null -a+b red shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

yellow shuttle1.r null -a+b yellow shuttle1.r' rigid -a+b[Bond right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

1 checkend.l null +a+b 1 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

e.0 checkend.l null +a+b e.0 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

e.1 checkend.l null +a+b e.1 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

e.2 checkend.l null +a+b e.2 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

e.3 checkend.l null +a+b e.3 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

read checkend.l null +a+b read checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

s checkend.l null +a+b s checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

tape.0 checkend.l null +a+b tape.0 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

tape.1 checkend.l null +a+b tape.1 checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

green checkend.l null +a+b green checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

orange checkend.l null +a+b orange checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

red checkend.l null +a+b red checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

yellow checkend.l null +a+b yellow checkend.l' rigid +a+b[Bond left {shuttle1,e.0}->{checkend,e.1,-1}]

1 checkend.l null +a+b 1 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

e.0 checkend.l null +a+b e.0 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

e.1 checkend.l null +a+b e.1 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

e.2 checkend.l null +a+b e.2 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

e.3 checkend.l null +a+b e.3 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

read checkend.l null +a+b read checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

s checkend.l null +a+b s checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

tape.0 checkend.l null +a+b tape.0 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

tape.1 checkend.l null +a+b tape.1 checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

green checkend.l null +a+b green checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

orange checkend.l null +a+b orange checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

red checkend.l null +a+b red checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

yellow checkend.l null +a+b yellow checkend.l' rigid +a+b[Bond left {shuttle2,e.0}->{checkend,e.2,-1}]

1 checkend.l null +a+b 1 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

e.0 checkend.l null +a+b e.0 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

e.1 checkend.l null +a+b e.1 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

e.2 checkend.l null +a+b e.2 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

e.3 checkend.l null +a+b e.3 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

read checkend.l null +a+b read checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

s checkend.l null +a+b s checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

tape.0 checkend.l null +a+b tape.0 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

tape.1 checkend.l null +a+b tape.1 checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

green checkend.l null +a+b green checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

orange checkend.l null +a+b orange checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

red checkend.l null +a+b red checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

yellow checkend.l null +a+b yellow checkend.l' rigid +a+b[Bond left {shuttle2,e.1}->{checkend,e.3,-1}]

1 converted.r null -a+b 1 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

e.0 converted.r null -a+b e.0 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

e.1 converted.r null -a+b e.1 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

e.2 converted.r null -a+b e.2 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

e.3 converted.r null -a+b e.3 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

read converted.r null -a+b read converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

s converted.r null -a+b s converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

tape.0 converted.r null -a+b tape.0 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

tape.1 converted.r null -a+b tape.1 converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

green converted.r null -a+b green converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

orange converted.r null -a+b orange converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

red converted.r null -a+b red converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

yellow converted.r null -a+b yellow converted.r' rigid -a+b[Bond right {ended,e.0}->{converted,red,+1}]

1 converted.r null -a+b 1 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

e.0 converted.r null -a+b e.0 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

e.1 converted.r null -a+b e.1 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

e.2 converted.r null -a+b e.2 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

e.3 converted.r null -a+b e.3 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

read converted.r null -a+b read converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

s converted.r null -a+b s converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

tape.0 converted.r null -a+b tape.0 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

tape.1 converted.r null -a+b tape.1 converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

green converted.r null -a+b green converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

orange converted.r null -a+b orange converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

red converted.r null -a+b red converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

yellow converted.r null -a+b yellow converted.r' rigid -a+b[Bond right {ended,e.1}->{converted,orange,+1}]

1 converted.r null -a+b 1 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

e.0 converted.r null -a+b e.0 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

e.1 converted.r null -a+b e.1 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

e.2 converted.r null -a+b e.2 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

e.3 converted.r null -a+b e.3 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

read converted.r null -a+b read converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

s converted.r null -a+b s converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

tape.0 converted.r null -a+b tape.0 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

tape.1 converted.r null -a+b tape.1 converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

green converted.r null -a+b green converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

orange converted.r null -a+b orange converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

red converted.r null -a+b red converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

yellow converted.r null -a+b yellow converted.r' rigid -a+b[Bond right {ended,e.2}->{converted,yellow,+1}]

1 converted.r null -a+b 1 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

e.0 converted.r null -a+b e.0 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

e.1 converted.r null -a+b e.1 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

e.2 converted.r null -a+b e.2 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

e.3 converted.r null -a+b e.3 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

read converted.r null -a+b read converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

s converted.r null -a+b s converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

tape.0 converted.r null -a+b tape.0 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

tape.1 converted.r null -a+b tape.1 converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

green converted.r null -a+b green converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

orange converted.r null -a+b orange converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

red converted.r null -a+b red converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

yellow converted.r null -a+b yellow converted.r' rigid -a+b[Bond right {ended,e.3}->{converted,green,+1}]

s read1.r' rigid +b s read1 null +b[Unbond {return,s}->{read1,s,+1}]

read ended.r' rigid +b read ended null +b[Unbond {checkend,read}->{ended,read,+1}]

s ended.r' rigid +b s ended null +b[Unbond {checkend,s}->{ended,s,+1}]

tape.0 return.l' rigid +b tape.0 return null +b[Unbond {checkend,tape.0}->{return,tape.0,-1}]

tape.1 return.l' rigid +b tape.1 return null +b[Unbond {checkend,tape.1}->{return,tape.1,-1}]

tape.0 return.l' rigid +b tape.0 return null +b[Unbond {return,tape.0}->{return,tape.0,-1}]

1 return.l' rigid +b 1 return null +b[Unbond {return,1}->{return,1,-1}]

read return.l' rigid +b read return null +b[Unbond {return,read}->{return,read,-1}]

read read2.r' rigid +b read read2 null +b[Unbond {read1,read}->{read2,read,+1}]

read ended.r' rigid +b read ended null +b[Unbond {read2,read}->{ended,read,+1}]

read return.l' rigid +b read return null +b[Unbond {read1,tape.0}->{return,read,-1}]

read return.l' rigid +b read return null +b[Unbond {read2,tape.0}->{return,read,-1}]

read return.l' rigid +b read return null +b[Unbond {read1,tape.0}->{return,read,-1}]

read return.l' rigid +b read return null +b[Unbond {read2,tape.0}->{return,read,-1}]

read shuttle1.r' rigid +b read shuttle1 null +b[Unbond {read1,tape.1}->{shuttle1,read,+1}]

read shuttle2.r' rigid +b read shuttle2 null +b[Unbond {read2,tape.1}->{shuttle2,read,+1}]

tape.0 shuttle1.r' rigid +b tape.0 shuttle1 null +b[Unbond {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

tape.1 shuttle1.r' rigid +b tape.1 shuttle1 null +b[Unbond {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.1 checkend.l' rigid +b e.1 checkend null +b[Unbond {shuttle1,e.0}->{checkend,e.1,-1}]

e.2 checkend.l' rigid +b e.2 checkend null +b[Unbond {shuttle2,e.0}->{checkend,e.2,-1}]

e.3 checkend.l' rigid +b e.3 checkend null +b[Unbond {shuttle2,e.1}->{checkend,e.3,-1}]

red converted.r' rigid +b red converted null +b[Unbond {ended,e.0}->{converted,red,+1}]

orange converted.r' rigid +b orange converted null +b[Unbond {ended,e.1}->{converted,orange,+1}]

yellow converted.r' rigid +b yellow converted null +b[Unbond {ended,e.2}->{converted,yellow,+1}]

green converted.r' rigid +b green converted null +b[Unbond {ended,e.3}->{converted,green,+1}]

1 read1 rigid -a+b 1 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

e.0 read1 rigid -a+b e.0 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

e.1 read1 rigid -a+b e.1 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

e.2 read1 rigid -a+b e.2 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

e.3 read1 rigid -a+b e.3 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

read read1 rigid -a+b read read1 rigid +b[Move right {return,s}->{read1,s,+1}]

s read1 rigid -a+b s read1 rigid +b[Move right {return,s}->{read1,s,+1}]

tape.0 read1 rigid -a+b tape.0 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

tape.1 read1 rigid -a+b tape.1 read1 rigid +b[Move right {return,s}->{read1,s,+1}]

green read1 rigid -a+b green read1 rigid +b[Move right {return,s}->{read1,s,+1}]

orange read1 rigid -a+b orange read1 rigid +b[Move right {return,s}->{read1,s,+1}]

red read1 rigid -a+b red read1 rigid +b[Move right {return,s}->{read1,s,+1}]

yellow read1 rigid -a+b yellow read1 rigid +b[Move right {return,s}->{read1,s,+1}]

1 ended rigid -a+b 1 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

e.0 ended rigid -a+b e.0 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

e.1 ended rigid -a+b e.1 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

e.2 ended rigid -a+b e.2 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

e.3 ended rigid -a+b e.3 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

read ended rigid -a+b read ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

s ended rigid -a+b s ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

tape.0 ended rigid -a+b tape.0 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

tape.1 ended rigid -a+b tape.1 ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

green ended rigid -a+b green ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

orange ended rigid -a+b orange ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

red ended rigid -a+b red ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

yellow ended rigid -a+b yellow ended rigid +b[Move right {checkend,read}->{ended,read,+1}]

1 ended rigid -a+b 1 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

e.0 ended rigid -a+b e.0 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

e.1 ended rigid -a+b e.1 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

e.2 ended rigid -a+b e.2 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

e.3 ended rigid -a+b e.3 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

read ended rigid -a+b read ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

s ended rigid -a+b s ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

tape.0 ended rigid -a+b tape.0 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

tape.1 ended rigid -a+b tape.1 ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

green ended rigid -a+b green ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

orange ended rigid -a+b orange ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

red ended rigid -a+b red ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

yellow ended rigid -a+b yellow ended rigid +b[Move right {checkend,s}->{ended,s,+1}]

1 return rigid +a+b 1 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

read return rigid +a+b read return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

s return rigid +a+b s return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

green return rigid +a+b green return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

orange return rigid +a+b orange return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

red return rigid +a+b red return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {checkend,tape.0}->{return,tape.0,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

read return rigid +a+b read return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

s return rigid +a+b s return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

green return rigid +a+b green return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

orange return rigid +a+b orange return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

red return rigid +a+b red return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {checkend,tape.1}->{return,tape.1,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

read return rigid +a+b read return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

s return rigid +a+b s return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

green return rigid +a+b green return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

orange return rigid +a+b orange return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

red return rigid +a+b red return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {return,tape.0}->{return,tape.0,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {return,1}->{return,1,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {return,1}->{return,1,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {return,1}->{return,1,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {return,1}->{return,1,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {return,1}->{return,1,-1}]

read return rigid +a+b read return rigid +b[Move left {return,1}->{return,1,-1}]

s return rigid +a+b s return rigid +b[Move left {return,1}->{return,1,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {return,1}->{return,1,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {return,1}->{return,1,-1}]

green return rigid +a+b green return rigid +b[Move left {return,1}->{return,1,-1}]

orange return rigid +a+b orange return rigid +b[Move left {return,1}->{return,1,-1}]

red return rigid +a+b red return rigid +b[Move left {return,1}->{return,1,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {return,1}->{return,1,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {return,read}->{return,read,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {return,read}->{return,read,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {return,read}->{return,read,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {return,read}->{return,read,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {return,read}->{return,read,-1}]

read return rigid +a+b read return rigid +b[Move left {return,read}->{return,read,-1}]

s return rigid +a+b s return rigid +b[Move left {return,read}->{return,read,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {return,read}->{return,read,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {return,read}->{return,read,-1}]

green return rigid +a+b green return rigid +b[Move left {return,read}->{return,read,-1}]

orange return rigid +a+b orange return rigid +b[Move left {return,read}->{return,read,-1}]

red return rigid +a+b red return rigid +b[Move left {return,read}->{return,read,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {return,read}->{return,read,-1}]

1 read2 rigid -a+b 1 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

e.0 read2 rigid -a+b e.0 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

e.1 read2 rigid -a+b e.1 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

e.2 read2 rigid -a+b e.2 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

e.3 read2 rigid -a+b e.3 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

read read2 rigid -a+b read read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

s read2 rigid -a+b s read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

tape.0 read2 rigid -a+b tape.0 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

tape.1 read2 rigid -a+b tape.1 read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

green read2 rigid -a+b green read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

orange read2 rigid -a+b orange read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

red read2 rigid -a+b red read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

yellow read2 rigid -a+b yellow read2 rigid +b[Move right {read1,read}->{read2,read,+1}]

1 ended rigid -a+b 1 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

e.0 ended rigid -a+b e.0 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

e.1 ended rigid -a+b e.1 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

e.2 ended rigid -a+b e.2 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

e.3 ended rigid -a+b e.3 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

read ended rigid -a+b read ended rigid +b[Move right {read2,read}->{ended,read,+1}]

s ended rigid -a+b s ended rigid +b[Move right {read2,read}->{ended,read,+1}]

tape.0 ended rigid -a+b tape.0 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

tape.1 ended rigid -a+b tape.1 ended rigid +b[Move right {read2,read}->{ended,read,+1}]

green ended rigid -a+b green ended rigid +b[Move right {read2,read}->{ended,read,+1}]

orange ended rigid -a+b orange ended rigid +b[Move right {read2,read}->{ended,read,+1}]

red ended rigid -a+b red ended rigid +b[Move right {read2,read}->{ended,read,+1}]

yellow ended rigid -a+b yellow ended rigid +b[Move right {read2,read}->{ended,read,+1}]

1 return rigid +a+b 1 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

read return rigid +a+b read return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

s return rigid +a+b s return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

green return rigid +a+b green return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

orange return rigid +a+b orange return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

red return rigid +a+b red return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

read return rigid +a+b read return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

s return rigid +a+b s return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

green return rigid +a+b green return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

orange return rigid +a+b orange return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

red return rigid +a+b red return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

read return rigid +a+b read return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

s return rigid +a+b s return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

green return rigid +a+b green return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

orange return rigid +a+b orange return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

red return rigid +a+b red return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {read1,tape.0}->{return,read,-1}]

1 return rigid +a+b 1 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.0 return rigid +a+b e.0 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.1 return rigid +a+b e.1 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.2 return rigid +a+b e.2 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

e.3 return rigid +a+b e.3 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

read return rigid +a+b read return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

s return rigid +a+b s return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

tape.0 return rigid +a+b tape.0 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

tape.1 return rigid +a+b tape.1 return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

green return rigid +a+b green return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

orange return rigid +a+b orange return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

red return rigid +a+b red return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

yellow return rigid +a+b yellow return rigid +b[Move left {read2,tape.0}->{return,read,-1}]

1 shuttle1 rigid -a+b 1 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

e.0 shuttle1 rigid -a+b e.0 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

e.1 shuttle1 rigid -a+b e.1 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

e.2 shuttle1 rigid -a+b e.2 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

e.3 shuttle1 rigid -a+b e.3 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

read shuttle1 rigid -a+b read shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

s shuttle1 rigid -a+b s shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

tape.0 shuttle1 rigid -a+b tape.0 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

tape.1 shuttle1 rigid -a+b tape.1 shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

green shuttle1 rigid -a+b green shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

orange shuttle1 rigid -a+b orange shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

red shuttle1 rigid -a+b red shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

yellow shuttle1 rigid -a+b yellow shuttle1 rigid +b[Move right {read1,tape.1}->{shuttle1,read,+1}]

1 shuttle2 rigid -a+b 1 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

e.0 shuttle2 rigid -a+b e.0 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

e.1 shuttle2 rigid -a+b e.1 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

e.2 shuttle2 rigid -a+b e.2 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

e.3 shuttle2 rigid -a+b e.3 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

read shuttle2 rigid -a+b read shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

s shuttle2 rigid -a+b s shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

tape.0 shuttle2 rigid -a+b tape.0 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

tape.1 shuttle2 rigid -a+b tape.1 shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

green shuttle2 rigid -a+b green shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

orange shuttle2 rigid -a+b orange shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

red shuttle2 rigid -a+b red shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

yellow shuttle2 rigid -a+b yellow shuttle2 rigid +b[Move right {read2,tape.1}->{shuttle2,read,+1}]

1 shuttle1 rigid -a+b 1 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.0 shuttle1 rigid -a+b e.0 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.1 shuttle1 rigid -a+b e.1 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.2 shuttle1 rigid -a+b e.2 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

e.3 shuttle1 rigid -a+b e.3 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

read shuttle1 rigid -a+b read shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

s shuttle1 rigid -a+b s shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

tape.0 shuttle1 rigid -a+b tape.0 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

tape.1 shuttle1 rigid -a+b tape.1 shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

green shuttle1 rigid -a+b green shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

orange shuttle1 rigid -a+b orange shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

red shuttle1 rigid -a+b red shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

yellow shuttle1 rigid -a+b yellow shuttle1 rigid +b[Move right {shuttle1,tape.0}->{shuttle1,tape.0,+1}]

1 shuttle1 rigid -a+b 1 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.0 shuttle1 rigid -a+b e.0 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.1 shuttle1 rigid -a+b e.1 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.2 shuttle1 rigid -a+b e.2 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

e.3 shuttle1 rigid -a+b e.3 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

read shuttle1 rigid -a+b read shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

s shuttle1 rigid -a+b s shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

tape.0 shuttle1 rigid -a+b tape.0 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

tape.1 shuttle1 rigid -a+b tape.1 shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

green shuttle1 rigid -a+b green shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

orange shuttle1 rigid -a+b orange shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

red shuttle1 rigid -a+b red shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

yellow shuttle1 rigid -a+b yellow shuttle1 rigid +b[Move right {shuttle1,tape.1}->{shuttle1,tape.1,+1}]

1 checkend rigid +a+b 1 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

e.0 checkend rigid +a+b e.0 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

e.1 checkend rigid +a+b e.1 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

e.2 checkend rigid +a+b e.2 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

e.3 checkend rigid +a+b e.3 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

read checkend rigid +a+b read checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

s checkend rigid +a+b s checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

tape.0 checkend rigid +a+b tape.0 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

tape.1 checkend rigid +a+b tape.1 checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

green checkend rigid +a+b green checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

orange checkend rigid +a+b orange checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

red checkend rigid +a+b red checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

yellow checkend rigid +a+b yellow checkend rigid +b[Move left {shuttle1,e.0}->{checkend,e.1,-1}]

1 checkend rigid +a+b 1 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

e.0 checkend rigid +a+b e.0 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

e.1 checkend rigid +a+b e.1 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

e.2 checkend rigid +a+b e.2 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

e.3 checkend rigid +a+b e.3 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

read checkend rigid +a+b read checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

s checkend rigid +a+b s checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

tape.0 checkend rigid +a+b tape.0 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

tape.1 checkend rigid +a+b tape.1 checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

green checkend rigid +a+b green checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

orange checkend rigid +a+b orange checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

red checkend rigid +a+b red checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

yellow checkend rigid +a+b yellow checkend rigid +b[Move left {shuttle2,e.0}->{checkend,e.2,-1}]

1 checkend rigid +a+b 1 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

e.0 checkend rigid +a+b e.0 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

e.1 checkend rigid +a+b e.1 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

e.2 checkend rigid +a+b e.2 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

e.3 checkend rigid +a+b e.3 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

read checkend rigid +a+b read checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

s checkend rigid +a+b s checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

tape.0 checkend rigid +a+b tape.0 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

tape.1 checkend rigid +a+b tape.1 checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

green checkend rigid +a+b green checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

orange checkend rigid +a+b orange checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

red checkend rigid +a+b red checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

yellow checkend rigid +a+b yellow checkend rigid +b[Move left {shuttle2,e.1}->{checkend,e.3,-1}]

1 converted rigid -a+b 1 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

e.0 converted rigid -a+b e.0 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

e.1 converted rigid -a+b e.1 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

e.2 converted rigid -a+b e.2 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

e.3 converted rigid -a+b e.3 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

read converted rigid -a+b read converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

s converted rigid -a+b s converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

tape.0 converted rigid -a+b tape.0 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

tape.1 converted rigid -a+b tape.1 converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

green converted rigid -a+b green converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

orange converted rigid -a+b orange converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

red converted rigid -a+b red converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

yellow converted rigid -a+b yellow converted rigid +b[Move right {ended,e.0}->{converted,red,+1}]

1 converted rigid -a+b 1 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

e.0 converted rigid -a+b e.0 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

e.1 converted rigid -a+b e.1 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

e.2 converted rigid -a+b e.2 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

e.3 converted rigid -a+b e.3 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

read converted rigid -a+b read converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

s converted rigid -a+b s converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

tape.0 converted rigid -a+b tape.0 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

tape.1 converted rigid -a+b tape.1 converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

green converted rigid -a+b green converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

orange converted rigid -a+b orange converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

red converted rigid -a+b red converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

yellow converted rigid -a+b yellow converted rigid +b[Move right {ended,e.1}->{converted,orange,+1}]

1 converted rigid -a+b 1 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

e.0 converted rigid -a+b e.0 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

e.1 converted rigid -a+b e.1 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

e.2 converted rigid -a+b e.2 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

e.3 converted rigid -a+b e.3 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

read converted rigid -a+b read converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

s converted rigid -a+b s converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

tape.0 converted rigid -a+b tape.0 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

tape.1 converted rigid -a+b tape.1 converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

green converted rigid -a+b green converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

orange converted rigid -a+b orange converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

red converted rigid -a+b red converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

yellow converted rigid -a+b yellow converted rigid +b[Move right {ended,e.2}->{converted,yellow,+1}]

1 converted rigid -a+b 1 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

e.0 converted rigid -a+b e.0 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

e.1 converted rigid -a+b e.1 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

e.2 converted rigid -a+b e.2 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

e.3 converted rigid -a+b e.3 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

read converted rigid -a+b read converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

s converted rigid -a+b s converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

tape.0 converted rigid -a+b tape.0 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

tape.1 converted rigid -a+b tape.1 converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

green converted rigid -a+b green converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

orange converted rigid -a+b orange converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

red converted rigid -a+b red converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

yellow converted rigid -a+b yellow converted rigid +b[Move right {ended,e.3}->{converted,green,+1}]

return.l empty null -a-b return.l.news s.unbound rigid -a-b

s.unbound 0 null +a s 0.bound rigid +a

s.unbound 1 null +a s 1.bound rigid +a

0.bound return.l.news rigid +b 0 return null +b

[sync]

red converted rigid +b red syncstart rigid +b

red converted.r rigid +b red syncstart rigid +b

red syncstart' rigid +b red syncstart rigid (1,0,1)

syncstart sync null (1,0,0) syncstart' sync' rigid (1,0,0)

sync sync null (1,0,0) sync sync' rigid (1,0,0)

orange converted rigid +b orange sync rigid +b

orange converted.r rigid +b orange sync rigid +b

orange sync' rigid +b orange sync flexible +b

yellow converted rigid +b yellow sync rigid +b

yellow converted.r rigid +b yellow sync rigid +b

yellow sync' rigid +b yellow sync flexible +b

green converted rigid +b green sync rigid +b

green converted.r rigid +b green sync rigid +b

green sync' rigid +b green sync flexible +b


Aliases:
E (1,0,0)
SE (1,-1,0)
SW (0,-1,0)
W (-1,0,0)
NW (-1,1,0)
NE (0,1,0)

+a (0,1,0)
+b (0,0,1)
-a (0,-1,0)
-b (0,0,-1)
+a+b (0,1,1)
+a-b (0,1,-1)
-a+b (0,-1,1)
-a-b (0,-1,-1)

0 null
1 rigid
2 flexible


